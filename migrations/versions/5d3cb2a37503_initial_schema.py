"""initial schema

Revision ID: 5d3cb2a37503
Revises: 
Create Date: 2025-07-11 18:33:37.105636

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '5d3cb2a37503'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rules_page')
    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('name', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('is_company', sa.Boolean(), nullable=False))

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('type', sa.Enum('INITIAL_SETUP', 'ADMIN_DEPOSIT', 'ADMIN_WITHDRAWAL', 'TICKET_PAYMENT', 'PERMIT_FEE', 'MARKETPLACE_SALE', 'MARKETPLACE_PURCHASE', 'TAX_PAYMENT', 'AUTOMATED_TAX_DEDUCTION', 'PERMIT_FEE_PAYMENT', 'AUCTION_WIN_DEBIT', 'AUCTION_SALE_CREDIT', 'OTHER', name='transactiontype'), nullable=False))
        batch_op.add_column(sa.Column('description', sa.String(length=255), nullable=True))
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
        batch_op.create_index(batch_op.f('ix_transactions_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('discord_user_id', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('discord_username', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('region', sa.Enum('US', 'EU', 'OTHER_DEFAULT', name='region_enum'), nullable=True))
        batch_op.alter_column('role',
               existing_type=sa.VARCHAR(length=7),
               type_=sa.Enum('USER', 'OFFICER', 'ADMIN', name='userrole'),
               existing_nullable=False)
        batch_op.create_index(batch_op.f('ix_users_discord_user_id'), ['discord_user_id'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_users_discord_user_id'))
        batch_op.alter_column('role',
               existing_type=sa.Enum('USER', 'OFFICER', 'ADMIN', name='userrole'),
               type_=sa.VARCHAR(length=7),
               existing_nullable=False)
        batch_op.drop_column('region')
        batch_op.drop_column('discord_username')
        batch_op.drop_column('discord_user_id')

    with op.batch_alter_table('transactions', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_transactions_timestamp'))
        batch_op.alter_column('timestamp',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
        batch_op.drop_column('description')
        batch_op.drop_column('type')

    with op.batch_alter_table('accounts', schema=None) as batch_op:
        batch_op.drop_column('is_company')
        batch_op.drop_column('name')

    op.create_table('rules_page',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('last_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['updated_by'], ['users.id'], name=op.f('rules_page_updated_by_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('rules_page_pkey'))
    )
    # ### end Alembic commands ###
