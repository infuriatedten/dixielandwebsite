"""Add contracts table

Revision ID: fe45aecdf1fc
Revises: 20fdc741e25f
Create Date: 2025-07-20 12:37:19.401987

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'fe45aecdf1fc'
down_revision = '20fdc741e25f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contracts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=128), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('reward', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('status', sa.Enum('AVAILABLE', 'CLAIMED', 'COMPLETED', 'CANCELLED', name='contractstatus'), nullable=False),
    sa.Column('creator_id', sa.Integer(), nullable=False),
    sa.Column('claimant_id', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('claimed_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['claimant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['creator_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('insurance_claims',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('farmer_id', sa.Integer(), nullable=False),
    sa.Column('claim_date', sa.DateTime(), nullable=False),
    sa.Column('reason', sa.Text(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'APPROVED', 'REJECTED', name='insuranceclaimstatus'), nullable=False),
    sa.ForeignKeyConstraint(['farmer_id'], ['farmers.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('tax_payment_logs')
    op.drop_table('tax_types')
    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_conversations_admin_id'), ['admin_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_creation_time'), ['creation_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_last_message_time'), ['last_message_time'], unique=False)
        batch_op.create_index(batch_op.f('ix_conversations_user_id'), ['user_id'], unique=False)

    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_messages_conversation_id'), ['conversation_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_sender_id'), ['sender_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_messages_timestamp'), ['timestamp'], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('messages', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_messages_timestamp'))
        batch_op.drop_index(batch_op.f('ix_messages_sender_id'))
        batch_op.drop_index(batch_op.f('ix_messages_conversation_id'))

    with op.batch_alter_table('conversations', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_conversations_user_id'))
        batch_op.drop_index(batch_op.f('ix_conversations_last_message_time'))
        batch_op.drop_index(batch_op.f('ix_conversations_creation_time'))
        batch_op.drop_index(batch_op.f('ix_conversations_admin_id'))

    op.create_table('tax_types',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('tax_types_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('amount', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('frequency', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='tax_types_pkey'),
    sa.UniqueConstraint('name', name='tax_types_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('tax_payment_logs',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('tax_type_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('amount_paid', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('payment_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('banking_transaction_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['banking_transaction_id'], ['transactions.id'], name=op.f('tax_payment_logs_banking_transaction_id_fkey')),
    sa.ForeignKeyConstraint(['tax_type_id'], ['tax_types.id'], name=op.f('tax_payment_logs_tax_type_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('tax_payment_logs_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tax_payment_logs_pkey')),
    sa.UniqueConstraint('banking_transaction_id', name=op.f('tax_payment_logs_banking_transaction_id_key'))
    )
    op.drop_table('insurance_claims')
    op.drop_table('contracts')
    # ### end Alembic commands ###
